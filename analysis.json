{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`<date-input>` is an input for time for **[Polymer](https://github.com/Polymer/polymer)**\n\n ```html\n   <date-input value=\"{{value}}\"></date-input>\n ```\n\n Have a look at [input-picker-pattern#input-shared-style](https://github.com/fooloomanzoo/input-picker-pattern#input-shared-style) to see the used style-properties.",
      "summary": "",
      "path": "date-input.js",
      "properties": [
        {
          "name": "clamp",
          "type": "string | null | undefined",
          "description": "Clamp datetime to a property\npossible values:'month', 'day', 'hour', 'minute', 'second', 'millisecond'",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 394,
              "column": 8
            },
            "end": {
              "line": 398,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_clampChanged\"",
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeOnly",
          "type": "boolean | null | undefined",
          "description": "if true perspective starts at 0 (1970-01-01)",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 436,
              "column": 8
            },
            "end": {
              "line": 439,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hideResetButton",
          "type": "boolean | null | undefined",
          "description": "if true, the reset button is hidden",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-input-mixin.js",
            "start": {
              "line": 341,
              "column": 8
            },
            "end": {
              "line": 344,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "withTimezone",
          "type": "boolean | null | undefined",
          "description": "if true, timezone inputs are shown",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-input-mixin.js",
            "start": {
              "line": 349,
              "column": 8
            },
            "end": {
              "line": 352,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "_resetButtonIsInvisible",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-input-mixin.js",
            "start": {
              "line": 354,
              "column": 8
            },
            "end": {
              "line": 357,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "name",
          "type": "string | null | undefined",
          "description": "name of the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 37,
              "column": 8
            },
            "end": {
              "line": 39,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "title",
          "type": "string | null | undefined",
          "description": "description for the element and can be used as a hint for invalid values",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 44,
              "column": 8
            },
            "end": {
              "line": 47,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "propertyForValue",
          "type": "string | null | undefined",
          "description": "defines the property that should be used for the value",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 52,
              "column": 8
            },
            "end": {
              "line": 55,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_createReflectPropertyToValueObserver\"",
              "attributeType": "String"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "value",
          "type": "Object | null | undefined",
          "description": "value of the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 60,
              "column": 8
            },
            "end": {
              "line": 64,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "default",
          "type": "Object | null | undefined",
          "description": "The default value of the input, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 343,
              "column": 8
            },
            "end": {
              "line": 346,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_defaultChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "disables the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 77,
              "column": 8
            },
            "end": {
              "line": 81,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "invalid",
          "type": "boolean | null | undefined",
          "description": "required attribute",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 86,
              "column": 8
            },
            "end": {
              "line": 91,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "required",
          "type": "boolean | null | undefined",
          "description": "required attribute",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 96,
              "column": 8
            },
            "end": {
              "line": 101,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "valueIsSet",
          "type": "boolean | null | undefined",
          "description": "is true when the value is set",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 106,
              "column": 8
            },
            "end": {
              "line": 110,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_isSet",
          "type": "Function | null | undefined",
          "description": "defines whether the value is set",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 115,
              "column": 8
            },
            "end": {
              "line": 117,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Function"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_validate",
          "type": "Function | null | undefined",
          "description": "validates the value (when required)",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 122,
              "column": 8
            },
            "end": {
              "line": 124,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Function"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "locale",
          "type": "string | null | undefined",
          "description": "The current locale",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/intl-datetime-format-mixin.js",
            "start": {
              "line": 23,
              "column": 8
            },
            "end": {
              "line": 26,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "decimalSeparator",
          "type": "string",
          "description": "locale separator for local decimal values",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/intl-datetime-format-mixin.js",
            "start": {
              "line": 32,
              "column": 8
            },
            "end": {
              "line": 35,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "dateSeparator",
          "type": "string",
          "description": "Separator for local date values (date-string is still in ISO-Format)",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/intl-datetime-format-mixin.js",
            "start": {
              "line": 41,
              "column": 8
            },
            "end": {
              "line": 44,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "timeSeparator",
          "type": "string",
          "description": "Separator for local time values (time-string is still in ISO-Format)",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/intl-datetime-format-mixin.js",
            "start": {
              "line": 50,
              "column": 8
            },
            "end": {
              "line": 53,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "amString",
          "type": "string | null | undefined",
          "description": "locale representation of 'AM'",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/intl-datetime-format-mixin.js",
            "start": {
              "line": 58,
              "column": 8
            },
            "end": {
              "line": 61,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "pmString",
          "type": "string | null | undefined",
          "description": "locale representation of 'PM'",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/intl-datetime-format-mixin.js",
            "start": {
              "line": 66,
              "column": 8
            },
            "end": {
              "line": 69,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "dateOrder",
          "type": "Object | null | undefined",
          "description": "order of date-parts",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/intl-datetime-format-mixin.js",
            "start": {
              "line": 74,
              "column": 8
            },
            "end": {
              "line": 85,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{\"parts\":[],\"timeFirst\":false,\"dateFirst\":true}",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "year",
          "type": "number | null | undefined",
          "description": "The year of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 225,
              "column": 8
            },
            "end": {
              "line": 228,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "month",
          "type": "number | null | undefined",
          "description": "The month of the selected date (starts with 1)",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 233,
              "column": 8
            },
            "end": {
              "line": 236,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "day",
          "type": "number | null | undefined",
          "description": "The day of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 241,
              "column": 8
            },
            "end": {
              "line": 244,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour",
          "type": "number | null | undefined",
          "description": "The hour of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 249,
              "column": 8
            },
            "end": {
              "line": 252,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12",
          "type": "number",
          "description": "hour in 12-hour-format",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 258,
              "column": 8
            },
            "end": {
              "line": 262,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_hour12Changed\"",
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "isAm",
          "type": "boolean",
          "description": "true, when A.M. (when `hour` < 12)",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 268,
              "column": 8
            },
            "end": {
              "line": 272,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_isAmChanged\"",
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "minute",
          "type": "number | null | undefined",
          "description": "The minute of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 277,
              "column": 8
            },
            "end": {
              "line": 280,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "second",
          "type": "number | null | undefined",
          "description": "The second of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 285,
              "column": 8
            },
            "end": {
              "line": 288,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "millisecond",
          "type": "number | null | undefined",
          "description": "The millisecond of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 293,
              "column": 8
            },
            "end": {
              "line": 296,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "datetime",
          "type": "string | null | undefined",
          "description": "the selected date and time (format: iso8601)",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 301,
              "column": 8
            },
            "end": {
              "line": 304,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "date",
          "type": "string | null | undefined",
          "description": "the selected date (format: iso8601)",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 309,
              "column": 8
            },
            "end": {
              "line": 312,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "time",
          "type": "string | null | undefined",
          "description": "the selected time (format: iso8601)",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 317,
              "column": 8
            },
            "end": {
              "line": 320,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "valueAsDate",
          "type": "Date | null | undefined",
          "description": "The date-object of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 325,
              "column": 8
            },
            "end": {
              "line": 329,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueAsDateChanged\"",
              "attributeType": "Date"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "valueAsNumber",
          "type": "number | null | undefined",
          "description": "The value of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 334,
              "column": 8
            },
            "end": {
              "line": 338,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueAsNumberChanged\"",
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "min",
          "type": "Object | null | undefined",
          "description": "The minimal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 351,
              "column": 8
            },
            "end": {
              "line": 355,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_minChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_minValue",
          "type": "number | null | undefined",
          "description": "value if the minimum date",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 360,
              "column": 8
            },
            "end": {
              "line": 362,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "max",
          "type": "Object | null | undefined",
          "description": "The maximal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 367,
              "column": 8
            },
            "end": {
              "line": 371,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_maxChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_maxValue",
          "type": "number | null | undefined",
          "description": "value if the maximum date",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 376,
              "column": 8
            },
            "end": {
              "line": 378,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12Format",
          "type": "boolean",
          "description": "when true, 12-hour time format, else 24-hour",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 384,
              "column": 8
            },
            "end": {
              "line": 388,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "timezone",
          "type": "string | null | undefined",
          "description": "The timezone offset in '±hh:mm' format",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 403,
              "column": 8
            },
            "end": {
              "line": 407,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_timezoneChanged\"",
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "offsetMinutes",
          "type": "number | null | undefined",
          "description": "The offset minutes of the set timezone",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 412,
              "column": 8
            },
            "end": {
              "line": 416,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_offsetMinutesChanged\"",
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeZoneHours",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 418,
              "column": 8
            },
            "end": {
              "line": 420,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeZoneMinutes",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 422,
              "column": 8
            },
            "end": {
              "line": 424,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_recentLocalTimezoneOffset",
          "type": "number | null | undefined",
          "description": "The offset minute of the current datetime",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 429,
              "column": 8
            },
            "end": {
              "line": 431,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_dateLocked",
          "type": "boolean | null | undefined",
          "description": "if true, time will be `00:00:00.000`",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 444,
              "column": 8
            },
            "end": {
              "line": 447,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        }
      ],
      "methods": [
        {
          "name": "_orderDateParts",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 63,
              "column": 4
            },
            "end": {
              "line": 118,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "order"
            },
            {
              "name": "clamp"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DateInputPattern"
        },
        {
          "name": "_getDefaultForProp",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 120,
              "column": 4
            },
            "end": {
              "line": 130,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            }
          ],
          "inheritedFrom": "DateInputPattern"
        },
        {
          "name": "_computeMaxForDayInput",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 132,
              "column": 4
            },
            "end": {
              "line": 137,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year"
            },
            {
              "name": "month"
            }
          ],
          "inheritedFrom": "DateInputPattern"
        },
        {
          "name": "_computePartOrder",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-input-mixin.js",
            "start": {
              "line": 361,
              "column": 4
            },
            "end": {
              "line": 363,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "first"
            }
          ],
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "_computeResetButtonIsInvisible",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-input-mixin.js",
            "start": {
              "line": 365,
              "column": 4
            },
            "end": {
              "line": 367,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "valueIsSet"
            },
            {
              "name": "defaultValue"
            },
            {
              "name": "valueAsNumber"
            }
          ],
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "_attachDom",
          "description": "attach dom with `delegatesFocus: true` so that the element is also focussed while its's children are too, and to autofocus to first tabable",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 21,
              "column": 4
            },
            "end": {
              "line": 30,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 135,
              "column": 4
            },
            "end": {
              "line": 138,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_defaultIsSet",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 146,
              "column": 4
            },
            "end": {
              "line": 148,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "Object",
              "description": "value to test"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "true, if the value is set"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_defaultValidate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 158,
              "column": 4
            },
            "end": {
              "line": 160,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isSet",
              "type": "Function",
              "description": "The function that defines if the value is set"
            },
            {
              "name": "value",
              "type": "Object",
              "description": "value to validate"
            },
            {
              "name": "required",
              "type": "Boolean",
              "description": "if true, the value is required"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "true, if the value is valid"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_computeInvalid",
          "description": "defines whether the value is set",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 169,
              "column": 4
            },
            "end": {
              "line": 171,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "validate"
            },
            {
              "name": "isSet"
            },
            {
              "name": "value"
            },
            {
              "name": "required"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_computeValueIsSet",
          "description": "defines whether the value is set",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 178,
              "column": 4
            },
            "end": {
              "line": 180,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isSet"
            },
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_valueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 182,
              "column": 4
            },
            "end": {
              "line": 187,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_defaultChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 584,
              "column": 4
            },
            "end": {
              "line": 591,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_createReflectPropertyToValueObserver",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 199,
              "column": 4
            },
            "end": {
              "line": 209,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_reflectPropertyToValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 211,
              "column": 4
            },
            "end": {
              "line": 213,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_reflectValueToProperty",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 215,
              "column": 4
            },
            "end": {
              "line": 217,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "validate",
          "description": "validates the input for iron-form",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 222,
              "column": 4
            },
            "end": {
              "line": 224,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "reset",
          "description": "reset the value",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 229,
              "column": 4
            },
            "end": {
              "line": 235,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_localeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/intl-datetime-format-mixin.js",
            "start": {
              "line": 95,
              "column": 4
            },
            "end": {
              "line": 283,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "_shouldPropertyChange",
          "description": "overwritten of polymer to handle -0",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 212,
              "column": 4
            },
            "end": {
              "line": 218,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property"
            },
            {
              "name": "value"
            },
            {
              "name": "old"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "now",
          "description": "Sets value to the actual date",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 464,
              "column": 4
            },
            "end": {
              "line": 480,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "setDate",
          "description": "sets date to all necessary properties",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 486,
              "column": 4
            },
            "end": {
              "line": 543,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "[the date to set]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "resetDate",
          "description": "resets the date (if `default` is set, it will be used for the new value)",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 549,
              "column": 4
            },
            "end": {
              "line": 582,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Event",
              "description": "[a causing event will not propagated]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeDatetime",
          "description": "compute date by date properties",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 603,
              "column": 4
            },
            "end": {
              "line": 669,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year",
              "type": "number"
            },
            {
              "name": "month",
              "type": "number"
            },
            {
              "name": "day",
              "type": "number"
            },
            {
              "name": "hour",
              "type": "number"
            },
            {
              "name": "minute",
              "type": "number"
            },
            {
              "name": "second",
              "type": "number"
            },
            {
              "name": "millisecond",
              "type": "number"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_dateTimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 671,
              "column": 4
            },
            "end": {
              "line": 698,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "date"
            },
            {
              "name": "time"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_datetimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 700,
              "column": 4
            },
            "end": {
              "line": 742,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "datetime"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_valueAsNumberChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 744,
              "column": 4
            },
            "end": {
              "line": 750,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_valueAsDateChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 752,
              "column": 4
            },
            "end": {
              "line": 763,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_checkThreshold",
          "description": "test date object against thresholds",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 770,
              "column": 4
            },
            "end": {
              "line": 781,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date"
            }
          ],
          "return": {
            "type": "Date",
            "desc": "ether the threshold when the date is exceeding or the date object itself"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_clampUTCComponents",
          "description": "clamp UTC values",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 789,
              "column": 4
            },
            "end": {
              "line": 806,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "The Date to clamp"
            },
            {
              "name": "clamp",
              "type": "string",
              "description": "The date component to clamp"
            }
          ],
          "return": {
            "type": "Date",
            "desc": "The clamped date"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_ifClamped",
          "description": "clamp to date component",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 811,
              "column": 4
            },
            "end": {
              "line": 815,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "clamp"
            },
            {
              "name": "comp"
            },
            {
              "name": "hidden"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_ifNotClamped",
          "description": "clamp to date component",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 819,
              "column": 4
            },
            "end": {
              "line": 821,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "clamp"
            },
            {
              "name": "comp"
            },
            {
              "name": "hidden"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_checkDefaultTimezone",
          "description": "set the default timezone if needed",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 827,
              "column": 4
            },
            "end": {
              "line": 840,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeTimezoneShift",
          "description": "correct a timezone shift when date changes from winter to summertime (locally)",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 846,
              "column": 4
            },
            "end": {
              "line": 855,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_clampChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 857,
              "column": 4
            },
            "end": {
              "line": 865,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "clamp"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_minChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 867,
              "column": 4
            },
            "end": {
              "line": 884,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "min"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_maxChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 886,
              "column": 4
            },
            "end": {
              "line": 903,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "max"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_minMaxValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 905,
              "column": 4
            },
            "end": {
              "line": 909,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_hour12Changed",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 911,
              "column": 4
            },
            "end": {
              "line": 917,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hour12"
            },
            {
              "name": "old"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_isAmChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 919,
              "column": 4
            },
            "end": {
              "line": 923,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isAm"
            },
            {
              "name": "old"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timezoneChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 925,
              "column": 4
            },
            "end": {
              "line": 948,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "timezone"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_offsetMinutesChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 950,
              "column": 4
            },
            "end": {
              "line": 960,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "offsetMinutes"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeZoneHoursMinutesChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 962,
              "column": 4
            },
            "end": {
              "line": 981,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hour"
            },
            {
              "name": "minute"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        },
        {
          "url": "demo/form.html",
          "description": "in a form"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 160,
          "column": 0
        },
        "end": {
          "line": 176,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "DateInput",
      "attributes": [
        {
          "name": "clamp",
          "description": "Clamp datetime to a property\npossible values:'month', 'day', 'hour', 'minute', 'second', 'millisecond'",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 394,
              "column": 8
            },
            "end": {
              "line": 398,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hide-reset-button",
          "description": "if true, the reset button is hidden",
          "sourceRange": {
            "file": "datetime-input-mixin.js",
            "start": {
              "line": 341,
              "column": 8
            },
            "end": {
              "line": 344,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "with-timezone",
          "description": "if true, timezone inputs are shown",
          "sourceRange": {
            "file": "datetime-input-mixin.js",
            "start": {
              "line": 349,
              "column": 8
            },
            "end": {
              "line": 352,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "name",
          "description": "name of the input",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 37,
              "column": 8
            },
            "end": {
              "line": 39,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "title",
          "description": "description for the element and can be used as a hint for invalid values",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 44,
              "column": 8
            },
            "end": {
              "line": 47,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "property-for-value",
          "description": "defines the property that should be used for the value",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 52,
              "column": 8
            },
            "end": {
              "line": 55,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "value",
          "description": "value of the input",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 60,
              "column": 8
            },
            "end": {
              "line": 64,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "default",
          "description": "The default value of the input, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 343,
              "column": 8
            },
            "end": {
              "line": 346,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "disabled",
          "description": "disables the input",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 77,
              "column": 8
            },
            "end": {
              "line": 81,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "invalid",
          "description": "required attribute",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 86,
              "column": 8
            },
            "end": {
              "line": 91,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "required",
          "description": "required attribute",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 96,
              "column": 8
            },
            "end": {
              "line": 101,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "value-is-set",
          "description": "is true when the value is set",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 106,
              "column": 8
            },
            "end": {
              "line": 110,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "locale",
          "description": "The current locale",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/intl-datetime-format-mixin.js",
            "start": {
              "line": 23,
              "column": 8
            },
            "end": {
              "line": 26,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "decimal-separator",
          "description": "locale separator for local decimal values",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/intl-datetime-format-mixin.js",
            "start": {
              "line": 32,
              "column": 8
            },
            "end": {
              "line": 35,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "date-separator",
          "description": "Separator for local date values (date-string is still in ISO-Format)",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/intl-datetime-format-mixin.js",
            "start": {
              "line": 41,
              "column": 8
            },
            "end": {
              "line": 44,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "time-separator",
          "description": "Separator for local time values (time-string is still in ISO-Format)",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/intl-datetime-format-mixin.js",
            "start": {
              "line": 50,
              "column": 8
            },
            "end": {
              "line": 53,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "am-string",
          "description": "locale representation of 'AM'",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/intl-datetime-format-mixin.js",
            "start": {
              "line": 58,
              "column": 8
            },
            "end": {
              "line": 61,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "pm-string",
          "description": "locale representation of 'PM'",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/intl-datetime-format-mixin.js",
            "start": {
              "line": 66,
              "column": 8
            },
            "end": {
              "line": 69,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "date-order",
          "description": "order of date-parts",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/intl-datetime-format-mixin.js",
            "start": {
              "line": 74,
              "column": 8
            },
            "end": {
              "line": 85,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "year",
          "description": "The year of the selected date",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 225,
              "column": 8
            },
            "end": {
              "line": 228,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "month",
          "description": "The month of the selected date (starts with 1)",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 233,
              "column": 8
            },
            "end": {
              "line": 236,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "day",
          "description": "The day of the selected date",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 241,
              "column": 8
            },
            "end": {
              "line": 244,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour",
          "description": "The hour of the selected time",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 249,
              "column": 8
            },
            "end": {
              "line": 252,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12",
          "description": "hour in 12-hour-format",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 258,
              "column": 8
            },
            "end": {
              "line": 262,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "is-am",
          "description": "true, when A.M. (when `hour` < 12)",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 268,
              "column": 8
            },
            "end": {
              "line": 272,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "minute",
          "description": "The minute of the selected time",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 277,
              "column": 8
            },
            "end": {
              "line": 280,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "second",
          "description": "The second of the selected time",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 285,
              "column": 8
            },
            "end": {
              "line": 288,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "millisecond",
          "description": "The millisecond of the selected time",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 293,
              "column": 8
            },
            "end": {
              "line": 296,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "datetime",
          "description": "the selected date and time (format: iso8601)",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 301,
              "column": 8
            },
            "end": {
              "line": 304,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "date",
          "description": "the selected date (format: iso8601)",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 309,
              "column": 8
            },
            "end": {
              "line": 312,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "time",
          "description": "the selected time (format: iso8601)",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 317,
              "column": 8
            },
            "end": {
              "line": 320,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value-as-date",
          "description": "The date-object of the selected date",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 325,
              "column": 8
            },
            "end": {
              "line": 329,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Date | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value-as-number",
          "description": "The value of the selected date",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 334,
              "column": 8
            },
            "end": {
              "line": 338,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "min",
          "description": "The minimal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 351,
              "column": 8
            },
            "end": {
              "line": 355,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "max",
          "description": "The maximal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 367,
              "column": 8
            },
            "end": {
              "line": 371,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12-format",
          "description": "when true, 12-hour time format, else 24-hour",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 384,
              "column": 8
            },
            "end": {
              "line": 388,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "timezone",
          "description": "The timezone offset in '±hh:mm' format",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 403,
              "column": 8
            },
            "end": {
              "line": 407,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "offset-minutes",
          "description": "The offset minutes of the set timezone",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 412,
              "column": 8
            },
            "end": {
              "line": 416,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "date-input",
      "mixins": [
        "DateInputPattern",
        "DatetimeInputMixin",
        "FormElementMixin",
        "DatetimeMixin"
      ]
    },
    {
      "description": "`<time-input>` is an input for time for **[Polymer](https://github.com/Polymer/polymer)**\n\n ```html\n   <time-input value-as-number=\"{{value}}\"></time-input>\n ```\n\n Have a look at [input-picker-pattern#input-shared-style](https://github.com/fooloomanzoo/input-picker-pattern#input-shared-style) to see the used style-properties.",
      "summary": "",
      "path": "time-input.js",
      "properties": [
        {
          "name": "clamp",
          "type": "string | null | undefined",
          "description": "Clamp datetime to a property\npossible values:'month', 'day', 'hour', 'minute', 'second', 'millisecond'",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 394,
              "column": 8
            },
            "end": {
              "line": 398,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_clampChanged\"",
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeOnly",
          "type": "boolean | null | undefined",
          "description": "if true perspective starts at 0 (1970-01-01)",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 436,
              "column": 8
            },
            "end": {
              "line": 439,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hideResetButton",
          "type": "boolean | null | undefined",
          "description": "if true, the reset button is hidden",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-input-mixin.js",
            "start": {
              "line": 341,
              "column": 8
            },
            "end": {
              "line": 344,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "withTimezone",
          "type": "boolean | null | undefined",
          "description": "if true, timezone inputs are shown",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-input-mixin.js",
            "start": {
              "line": 349,
              "column": 8
            },
            "end": {
              "line": 352,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "_resetButtonIsInvisible",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-input-mixin.js",
            "start": {
              "line": 354,
              "column": 8
            },
            "end": {
              "line": 357,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "name",
          "type": "string | null | undefined",
          "description": "name of the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 37,
              "column": 8
            },
            "end": {
              "line": 39,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "title",
          "type": "string | null | undefined",
          "description": "description for the element and can be used as a hint for invalid values",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 44,
              "column": 8
            },
            "end": {
              "line": 47,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "propertyForValue",
          "type": "string | null | undefined",
          "description": "defines the property that should be used for the value",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 52,
              "column": 8
            },
            "end": {
              "line": 55,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_createReflectPropertyToValueObserver\"",
              "attributeType": "String"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "value",
          "type": "Object | null | undefined",
          "description": "value of the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 60,
              "column": 8
            },
            "end": {
              "line": 64,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "default",
          "type": "Object | null | undefined",
          "description": "The default value of the input, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 343,
              "column": 8
            },
            "end": {
              "line": 346,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_defaultChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "disables the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 77,
              "column": 8
            },
            "end": {
              "line": 81,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "invalid",
          "type": "boolean | null | undefined",
          "description": "required attribute",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 86,
              "column": 8
            },
            "end": {
              "line": 91,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "required",
          "type": "boolean | null | undefined",
          "description": "required attribute",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 96,
              "column": 8
            },
            "end": {
              "line": 101,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "valueIsSet",
          "type": "boolean | null | undefined",
          "description": "is true when the value is set",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 106,
              "column": 8
            },
            "end": {
              "line": 110,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_isSet",
          "type": "Function | null | undefined",
          "description": "defines whether the value is set",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 115,
              "column": 8
            },
            "end": {
              "line": 117,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Function"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_validate",
          "type": "Function | null | undefined",
          "description": "validates the value (when required)",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 122,
              "column": 8
            },
            "end": {
              "line": 124,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Function"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "locale",
          "type": "string | null | undefined",
          "description": "The current locale",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/intl-datetime-format-mixin.js",
            "start": {
              "line": 23,
              "column": 8
            },
            "end": {
              "line": 26,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "decimalSeparator",
          "type": "string",
          "description": "locale separator for local decimal values",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/intl-datetime-format-mixin.js",
            "start": {
              "line": 32,
              "column": 8
            },
            "end": {
              "line": 35,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "dateSeparator",
          "type": "string",
          "description": "Separator for local date values (date-string is still in ISO-Format)",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/intl-datetime-format-mixin.js",
            "start": {
              "line": 41,
              "column": 8
            },
            "end": {
              "line": 44,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "timeSeparator",
          "type": "string",
          "description": "Separator for local time values (time-string is still in ISO-Format)",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/intl-datetime-format-mixin.js",
            "start": {
              "line": 50,
              "column": 8
            },
            "end": {
              "line": 53,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "amString",
          "type": "string | null | undefined",
          "description": "locale representation of 'AM'",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/intl-datetime-format-mixin.js",
            "start": {
              "line": 58,
              "column": 8
            },
            "end": {
              "line": 61,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "pmString",
          "type": "string | null | undefined",
          "description": "locale representation of 'PM'",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/intl-datetime-format-mixin.js",
            "start": {
              "line": 66,
              "column": 8
            },
            "end": {
              "line": 69,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "dateOrder",
          "type": "Object | null | undefined",
          "description": "order of date-parts",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/intl-datetime-format-mixin.js",
            "start": {
              "line": 74,
              "column": 8
            },
            "end": {
              "line": 85,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{\"parts\":[],\"timeFirst\":false,\"dateFirst\":true}",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "year",
          "type": "number | null | undefined",
          "description": "The year of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 225,
              "column": 8
            },
            "end": {
              "line": 228,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "month",
          "type": "number | null | undefined",
          "description": "The month of the selected date (starts with 1)",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 233,
              "column": 8
            },
            "end": {
              "line": 236,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "day",
          "type": "number | null | undefined",
          "description": "The day of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 241,
              "column": 8
            },
            "end": {
              "line": 244,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour",
          "type": "number | null | undefined",
          "description": "The hour of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 249,
              "column": 8
            },
            "end": {
              "line": 252,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12",
          "type": "number",
          "description": "hour in 12-hour-format",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 258,
              "column": 8
            },
            "end": {
              "line": 262,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_hour12Changed\"",
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "isAm",
          "type": "boolean",
          "description": "true, when A.M. (when `hour` < 12)",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 268,
              "column": 8
            },
            "end": {
              "line": 272,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_isAmChanged\"",
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "minute",
          "type": "number | null | undefined",
          "description": "The minute of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 277,
              "column": 8
            },
            "end": {
              "line": 280,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "second",
          "type": "number | null | undefined",
          "description": "The second of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 285,
              "column": 8
            },
            "end": {
              "line": 288,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "millisecond",
          "type": "number | null | undefined",
          "description": "The millisecond of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 293,
              "column": 8
            },
            "end": {
              "line": 296,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "datetime",
          "type": "string | null | undefined",
          "description": "the selected date and time (format: iso8601)",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 301,
              "column": 8
            },
            "end": {
              "line": 304,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "date",
          "type": "string | null | undefined",
          "description": "the selected date (format: iso8601)",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 309,
              "column": 8
            },
            "end": {
              "line": 312,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "time",
          "type": "string | null | undefined",
          "description": "the selected time (format: iso8601)",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 317,
              "column": 8
            },
            "end": {
              "line": 320,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "valueAsDate",
          "type": "Date | null | undefined",
          "description": "The date-object of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 325,
              "column": 8
            },
            "end": {
              "line": 329,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueAsDateChanged\"",
              "attributeType": "Date"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "valueAsNumber",
          "type": "number | null | undefined",
          "description": "The value of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 334,
              "column": 8
            },
            "end": {
              "line": 338,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueAsNumberChanged\"",
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "min",
          "type": "Object | null | undefined",
          "description": "The minimal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 351,
              "column": 8
            },
            "end": {
              "line": 355,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_minChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_minValue",
          "type": "number | null | undefined",
          "description": "value if the minimum date",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 360,
              "column": 8
            },
            "end": {
              "line": 362,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "max",
          "type": "Object | null | undefined",
          "description": "The maximal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 367,
              "column": 8
            },
            "end": {
              "line": 371,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_maxChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_maxValue",
          "type": "number | null | undefined",
          "description": "value if the maximum date",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 376,
              "column": 8
            },
            "end": {
              "line": 378,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12Format",
          "type": "boolean",
          "description": "when true, 12-hour time format, else 24-hour",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 384,
              "column": 8
            },
            "end": {
              "line": 388,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "timezone",
          "type": "string | null | undefined",
          "description": "The timezone offset in '±hh:mm' format",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 403,
              "column": 8
            },
            "end": {
              "line": 407,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_timezoneChanged\"",
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "offsetMinutes",
          "type": "number | null | undefined",
          "description": "The offset minutes of the set timezone",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 412,
              "column": 8
            },
            "end": {
              "line": 416,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_offsetMinutesChanged\"",
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeZoneHours",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 418,
              "column": 8
            },
            "end": {
              "line": 420,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeZoneMinutes",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 422,
              "column": 8
            },
            "end": {
              "line": 424,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_recentLocalTimezoneOffset",
          "type": "number | null | undefined",
          "description": "The offset minute of the current datetime",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 429,
              "column": 8
            },
            "end": {
              "line": 431,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_dateLocked",
          "type": "boolean | null | undefined",
          "description": "if true, time will be `00:00:00.000`",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 444,
              "column": 8
            },
            "end": {
              "line": 447,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        }
      ],
      "methods": [
        {
          "name": "_switchAm",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 82,
              "column": 4
            },
            "end": {
              "line": 84,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "TimeInputPattern"
        },
        {
          "name": "_computePartOrder",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-input-mixin.js",
            "start": {
              "line": 361,
              "column": 4
            },
            "end": {
              "line": 363,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "first"
            }
          ],
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "_computeResetButtonIsInvisible",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-input-mixin.js",
            "start": {
              "line": 365,
              "column": 4
            },
            "end": {
              "line": 367,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "valueIsSet"
            },
            {
              "name": "defaultValue"
            },
            {
              "name": "valueAsNumber"
            }
          ],
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "_attachDom",
          "description": "attach dom with `delegatesFocus: true` so that the element is also focussed while its's children are too, and to autofocus to first tabable",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 21,
              "column": 4
            },
            "end": {
              "line": 30,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 135,
              "column": 4
            },
            "end": {
              "line": 138,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_defaultIsSet",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 146,
              "column": 4
            },
            "end": {
              "line": 148,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "Object",
              "description": "value to test"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "true, if the value is set"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_defaultValidate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 158,
              "column": 4
            },
            "end": {
              "line": 160,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isSet",
              "type": "Function",
              "description": "The function that defines if the value is set"
            },
            {
              "name": "value",
              "type": "Object",
              "description": "value to validate"
            },
            {
              "name": "required",
              "type": "Boolean",
              "description": "if true, the value is required"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "true, if the value is valid"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_computeInvalid",
          "description": "defines whether the value is set",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 169,
              "column": 4
            },
            "end": {
              "line": 171,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "validate"
            },
            {
              "name": "isSet"
            },
            {
              "name": "value"
            },
            {
              "name": "required"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_computeValueIsSet",
          "description": "defines whether the value is set",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 178,
              "column": 4
            },
            "end": {
              "line": 180,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isSet"
            },
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_valueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 182,
              "column": 4
            },
            "end": {
              "line": 187,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_defaultChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 584,
              "column": 4
            },
            "end": {
              "line": 591,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_createReflectPropertyToValueObserver",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 199,
              "column": 4
            },
            "end": {
              "line": 209,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_reflectPropertyToValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 211,
              "column": 4
            },
            "end": {
              "line": 213,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_reflectValueToProperty",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 215,
              "column": 4
            },
            "end": {
              "line": 217,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "validate",
          "description": "validates the input for iron-form",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 222,
              "column": 4
            },
            "end": {
              "line": 224,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "reset",
          "description": "reset the value",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 229,
              "column": 4
            },
            "end": {
              "line": 235,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_localeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/intl-datetime-format-mixin.js",
            "start": {
              "line": 95,
              "column": 4
            },
            "end": {
              "line": 283,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "_shouldPropertyChange",
          "description": "overwritten of polymer to handle -0",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 212,
              "column": 4
            },
            "end": {
              "line": 218,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property"
            },
            {
              "name": "value"
            },
            {
              "name": "old"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "now",
          "description": "Sets value to the actual date",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 464,
              "column": 4
            },
            "end": {
              "line": 480,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "setDate",
          "description": "sets date to all necessary properties",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 486,
              "column": 4
            },
            "end": {
              "line": 543,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "[the date to set]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "resetDate",
          "description": "resets the date (if `default` is set, it will be used for the new value)",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 549,
              "column": 4
            },
            "end": {
              "line": 582,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Event",
              "description": "[a causing event will not propagated]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeDatetime",
          "description": "compute date by date properties",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 603,
              "column": 4
            },
            "end": {
              "line": 669,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year",
              "type": "number"
            },
            {
              "name": "month",
              "type": "number"
            },
            {
              "name": "day",
              "type": "number"
            },
            {
              "name": "hour",
              "type": "number"
            },
            {
              "name": "minute",
              "type": "number"
            },
            {
              "name": "second",
              "type": "number"
            },
            {
              "name": "millisecond",
              "type": "number"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_dateTimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 671,
              "column": 4
            },
            "end": {
              "line": 698,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "date"
            },
            {
              "name": "time"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_datetimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 700,
              "column": 4
            },
            "end": {
              "line": 742,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "datetime"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_valueAsNumberChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 744,
              "column": 4
            },
            "end": {
              "line": 750,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_valueAsDateChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 752,
              "column": 4
            },
            "end": {
              "line": 763,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_checkThreshold",
          "description": "test date object against thresholds",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 770,
              "column": 4
            },
            "end": {
              "line": 781,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date"
            }
          ],
          "return": {
            "type": "Date",
            "desc": "ether the threshold when the date is exceeding or the date object itself"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_clampUTCComponents",
          "description": "clamp UTC values",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 789,
              "column": 4
            },
            "end": {
              "line": 806,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "The Date to clamp"
            },
            {
              "name": "clamp",
              "type": "string",
              "description": "The date component to clamp"
            }
          ],
          "return": {
            "type": "Date",
            "desc": "The clamped date"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_ifClamped",
          "description": "clamp to date component",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 811,
              "column": 4
            },
            "end": {
              "line": 815,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "clamp"
            },
            {
              "name": "comp"
            },
            {
              "name": "hidden"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_ifNotClamped",
          "description": "clamp to date component",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 819,
              "column": 4
            },
            "end": {
              "line": 821,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "clamp"
            },
            {
              "name": "comp"
            },
            {
              "name": "hidden"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_checkDefaultTimezone",
          "description": "set the default timezone if needed",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 827,
              "column": 4
            },
            "end": {
              "line": 840,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeTimezoneShift",
          "description": "correct a timezone shift when date changes from winter to summertime (locally)",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 846,
              "column": 4
            },
            "end": {
              "line": 855,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_clampChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 857,
              "column": 4
            },
            "end": {
              "line": 865,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "clamp"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_minChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 867,
              "column": 4
            },
            "end": {
              "line": 884,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "min"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_maxChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 886,
              "column": 4
            },
            "end": {
              "line": 903,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "max"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_minMaxValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 905,
              "column": 4
            },
            "end": {
              "line": 909,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_hour12Changed",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 911,
              "column": 4
            },
            "end": {
              "line": 917,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hour12"
            },
            {
              "name": "old"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_isAmChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 919,
              "column": 4
            },
            "end": {
              "line": 923,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isAm"
            },
            {
              "name": "old"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timezoneChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 925,
              "column": 4
            },
            "end": {
              "line": 948,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "timezone"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_offsetMinutesChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 950,
              "column": 4
            },
            "end": {
              "line": 960,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "offsetMinutes"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeZoneHoursMinutesChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 962,
              "column": 4
            },
            "end": {
              "line": 981,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hour"
            },
            {
              "name": "minute"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        },
        {
          "url": "demo/form.html",
          "description": "in a form"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 108,
          "column": 0
        },
        "end": {
          "line": 124,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "TimeInput",
      "attributes": [
        {
          "name": "clamp",
          "description": "Clamp datetime to a property\npossible values:'month', 'day', 'hour', 'minute', 'second', 'millisecond'",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 394,
              "column": 8
            },
            "end": {
              "line": 398,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hide-reset-button",
          "description": "if true, the reset button is hidden",
          "sourceRange": {
            "file": "datetime-input-mixin.js",
            "start": {
              "line": 341,
              "column": 8
            },
            "end": {
              "line": 344,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "with-timezone",
          "description": "if true, timezone inputs are shown",
          "sourceRange": {
            "file": "datetime-input-mixin.js",
            "start": {
              "line": 349,
              "column": 8
            },
            "end": {
              "line": 352,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "name",
          "description": "name of the input",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 37,
              "column": 8
            },
            "end": {
              "line": 39,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "title",
          "description": "description for the element and can be used as a hint for invalid values",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 44,
              "column": 8
            },
            "end": {
              "line": 47,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "property-for-value",
          "description": "defines the property that should be used for the value",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 52,
              "column": 8
            },
            "end": {
              "line": 55,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "value",
          "description": "value of the input",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 60,
              "column": 8
            },
            "end": {
              "line": 64,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "default",
          "description": "The default value of the input, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 343,
              "column": 8
            },
            "end": {
              "line": 346,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "disabled",
          "description": "disables the input",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 77,
              "column": 8
            },
            "end": {
              "line": 81,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "invalid",
          "description": "required attribute",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 86,
              "column": 8
            },
            "end": {
              "line": 91,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "required",
          "description": "required attribute",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 96,
              "column": 8
            },
            "end": {
              "line": 101,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "value-is-set",
          "description": "is true when the value is set",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 106,
              "column": 8
            },
            "end": {
              "line": 110,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "locale",
          "description": "The current locale",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/intl-datetime-format-mixin.js",
            "start": {
              "line": 23,
              "column": 8
            },
            "end": {
              "line": 26,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "decimal-separator",
          "description": "locale separator for local decimal values",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/intl-datetime-format-mixin.js",
            "start": {
              "line": 32,
              "column": 8
            },
            "end": {
              "line": 35,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "date-separator",
          "description": "Separator for local date values (date-string is still in ISO-Format)",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/intl-datetime-format-mixin.js",
            "start": {
              "line": 41,
              "column": 8
            },
            "end": {
              "line": 44,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "time-separator",
          "description": "Separator for local time values (time-string is still in ISO-Format)",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/intl-datetime-format-mixin.js",
            "start": {
              "line": 50,
              "column": 8
            },
            "end": {
              "line": 53,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "am-string",
          "description": "locale representation of 'AM'",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/intl-datetime-format-mixin.js",
            "start": {
              "line": 58,
              "column": 8
            },
            "end": {
              "line": 61,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "pm-string",
          "description": "locale representation of 'PM'",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/intl-datetime-format-mixin.js",
            "start": {
              "line": 66,
              "column": 8
            },
            "end": {
              "line": 69,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "date-order",
          "description": "order of date-parts",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/intl-datetime-format-mixin.js",
            "start": {
              "line": 74,
              "column": 8
            },
            "end": {
              "line": 85,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "year",
          "description": "The year of the selected date",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 225,
              "column": 8
            },
            "end": {
              "line": 228,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "month",
          "description": "The month of the selected date (starts with 1)",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 233,
              "column": 8
            },
            "end": {
              "line": 236,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "day",
          "description": "The day of the selected date",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 241,
              "column": 8
            },
            "end": {
              "line": 244,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour",
          "description": "The hour of the selected time",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 249,
              "column": 8
            },
            "end": {
              "line": 252,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12",
          "description": "hour in 12-hour-format",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 258,
              "column": 8
            },
            "end": {
              "line": 262,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "is-am",
          "description": "true, when A.M. (when `hour` < 12)",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 268,
              "column": 8
            },
            "end": {
              "line": 272,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "minute",
          "description": "The minute of the selected time",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 277,
              "column": 8
            },
            "end": {
              "line": 280,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "second",
          "description": "The second of the selected time",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 285,
              "column": 8
            },
            "end": {
              "line": 288,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "millisecond",
          "description": "The millisecond of the selected time",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 293,
              "column": 8
            },
            "end": {
              "line": 296,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "datetime",
          "description": "the selected date and time (format: iso8601)",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 301,
              "column": 8
            },
            "end": {
              "line": 304,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "date",
          "description": "the selected date (format: iso8601)",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 309,
              "column": 8
            },
            "end": {
              "line": 312,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "time",
          "description": "the selected time (format: iso8601)",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 317,
              "column": 8
            },
            "end": {
              "line": 320,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value-as-date",
          "description": "The date-object of the selected date",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 325,
              "column": 8
            },
            "end": {
              "line": 329,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Date | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value-as-number",
          "description": "The value of the selected date",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 334,
              "column": 8
            },
            "end": {
              "line": 338,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "min",
          "description": "The minimal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 351,
              "column": 8
            },
            "end": {
              "line": 355,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "max",
          "description": "The maximal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 367,
              "column": 8
            },
            "end": {
              "line": 371,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12-format",
          "description": "when true, 12-hour time format, else 24-hour",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 384,
              "column": 8
            },
            "end": {
              "line": 388,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "timezone",
          "description": "The timezone offset in '±hh:mm' format",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 403,
              "column": 8
            },
            "end": {
              "line": 407,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "offset-minutes",
          "description": "The offset minutes of the set timezone",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 412,
              "column": 8
            },
            "end": {
              "line": 416,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "time-input",
      "mixins": [
        "TimeInputPattern",
        "DatetimeInputMixin",
        "FormElementMixin",
        "DatetimeMixin"
      ]
    },
    {
      "description": "`<datetime-input>` is an input for datetime for **[Polymer](https://github.com/Polymer/polymer)**\n\n ```html\n   <datetime-input value=\"{{value}}\"></datetime-input>\n ```\n\n Have a look at [input-picker-pattern#input-shared-style](https://github.com/fooloomanzoo/input-picker-pattern#input-shared-style) to see the used style-properties.",
      "summary": "",
      "path": "datetime-input.js",
      "properties": [
        {
          "name": "clamp",
          "type": "string | null | undefined",
          "description": "Clamp timetime to a property\npossible values: 'month', 'day', 'hour', 'minute', 'second', 'millisecond' or ''",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 52,
              "column": 6
            },
            "end": {
              "line": 56,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "defaultValue": "\"millisecond\""
        },
        {
          "name": "_timeOnly",
          "type": "boolean | null | undefined",
          "description": "if true perspective starts at 0 (1970-01-01)",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 436,
              "column": 8
            },
            "end": {
              "line": 439,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hideResetButton",
          "type": "boolean | null | undefined",
          "description": "if true, the reset button is hidden",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-input-mixin.js",
            "start": {
              "line": 341,
              "column": 8
            },
            "end": {
              "line": 344,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "withTimezone",
          "type": "boolean | null | undefined",
          "description": "if true, timezone inputs are shown",
          "privacy": "public",
          "sourceRange": {
            "file": "datetime-input-mixin.js",
            "start": {
              "line": 349,
              "column": 8
            },
            "end": {
              "line": 352,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "_resetButtonIsInvisible",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-input-mixin.js",
            "start": {
              "line": 354,
              "column": 8
            },
            "end": {
              "line": 357,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "name",
          "type": "string | null | undefined",
          "description": "name of the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 37,
              "column": 8
            },
            "end": {
              "line": 39,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "title",
          "type": "string | null | undefined",
          "description": "description for the element and can be used as a hint for invalid values",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 44,
              "column": 8
            },
            "end": {
              "line": 47,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "propertyForValue",
          "type": "string | null | undefined",
          "description": "defines the property that should be used for the value",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 52,
              "column": 8
            },
            "end": {
              "line": 55,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_createReflectPropertyToValueObserver\"",
              "attributeType": "String"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "value",
          "type": "Object | null | undefined",
          "description": "value of the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 60,
              "column": 8
            },
            "end": {
              "line": 64,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "default",
          "type": "Object | null | undefined",
          "description": "The default value of the input, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 343,
              "column": 8
            },
            "end": {
              "line": 346,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_defaultChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "disables the input",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 77,
              "column": 8
            },
            "end": {
              "line": 81,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "invalid",
          "type": "boolean | null | undefined",
          "description": "required attribute",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 86,
              "column": 8
            },
            "end": {
              "line": 91,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "required",
          "type": "boolean | null | undefined",
          "description": "required attribute",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 96,
              "column": 8
            },
            "end": {
              "line": 101,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "valueIsSet",
          "type": "boolean | null | undefined",
          "description": "is true when the value is set",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 106,
              "column": 8
            },
            "end": {
              "line": 110,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_isSet",
          "type": "Function | null | undefined",
          "description": "defines whether the value is set",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 115,
              "column": 8
            },
            "end": {
              "line": 117,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Function"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_validate",
          "type": "Function | null | undefined",
          "description": "validates the value (when required)",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 122,
              "column": 8
            },
            "end": {
              "line": 124,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Function"
            }
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "locale",
          "type": "string | null | undefined",
          "description": "The current locale",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/intl-datetime-format-mixin.js",
            "start": {
              "line": 23,
              "column": 8
            },
            "end": {
              "line": 26,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "decimalSeparator",
          "type": "string",
          "description": "locale separator for local decimal values",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/intl-datetime-format-mixin.js",
            "start": {
              "line": 32,
              "column": 8
            },
            "end": {
              "line": 35,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "dateSeparator",
          "type": "string",
          "description": "Separator for local date values (date-string is still in ISO-Format)",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/intl-datetime-format-mixin.js",
            "start": {
              "line": 41,
              "column": 8
            },
            "end": {
              "line": 44,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "timeSeparator",
          "type": "string",
          "description": "Separator for local time values (time-string is still in ISO-Format)",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/intl-datetime-format-mixin.js",
            "start": {
              "line": 50,
              "column": 8
            },
            "end": {
              "line": 53,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "amString",
          "type": "string | null | undefined",
          "description": "locale representation of 'AM'",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/intl-datetime-format-mixin.js",
            "start": {
              "line": 58,
              "column": 8
            },
            "end": {
              "line": 61,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "pmString",
          "type": "string | null | undefined",
          "description": "locale representation of 'PM'",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/intl-datetime-format-mixin.js",
            "start": {
              "line": 66,
              "column": 8
            },
            "end": {
              "line": 69,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "dateOrder",
          "type": "Object | null | undefined",
          "description": "order of date-parts",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/intl-datetime-format-mixin.js",
            "start": {
              "line": 74,
              "column": 8
            },
            "end": {
              "line": 85,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{\"parts\":[],\"timeFirst\":false,\"dateFirst\":true}",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "year",
          "type": "number | null | undefined",
          "description": "The year of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 225,
              "column": 8
            },
            "end": {
              "line": 228,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "month",
          "type": "number | null | undefined",
          "description": "The month of the selected date (starts with 1)",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 233,
              "column": 8
            },
            "end": {
              "line": 236,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "day",
          "type": "number | null | undefined",
          "description": "The day of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 241,
              "column": 8
            },
            "end": {
              "line": 244,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour",
          "type": "number | null | undefined",
          "description": "The hour of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 249,
              "column": 8
            },
            "end": {
              "line": 252,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12",
          "type": "number",
          "description": "hour in 12-hour-format",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 258,
              "column": 8
            },
            "end": {
              "line": 262,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_hour12Changed\"",
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "isAm",
          "type": "boolean",
          "description": "true, when A.M. (when `hour` < 12)",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 268,
              "column": 8
            },
            "end": {
              "line": 272,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_isAmChanged\"",
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "minute",
          "type": "number | null | undefined",
          "description": "The minute of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 277,
              "column": 8
            },
            "end": {
              "line": 280,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "second",
          "type": "number | null | undefined",
          "description": "The second of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 285,
              "column": 8
            },
            "end": {
              "line": 288,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "millisecond",
          "type": "number | null | undefined",
          "description": "The millisecond of the selected time",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 293,
              "column": 8
            },
            "end": {
              "line": 296,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "datetime",
          "type": "string | null | undefined",
          "description": "the selected date and time (format: iso8601)",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 301,
              "column": 8
            },
            "end": {
              "line": 304,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "date",
          "type": "string | null | undefined",
          "description": "the selected date (format: iso8601)",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 309,
              "column": 8
            },
            "end": {
              "line": 312,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "time",
          "type": "string | null | undefined",
          "description": "the selected time (format: iso8601)",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 317,
              "column": 8
            },
            "end": {
              "line": 320,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "valueAsDate",
          "type": "Date | null | undefined",
          "description": "The date-object of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 325,
              "column": 8
            },
            "end": {
              "line": 329,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueAsDateChanged\"",
              "attributeType": "Date"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "valueAsNumber",
          "type": "number | null | undefined",
          "description": "The value of the selected date",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 334,
              "column": 8
            },
            "end": {
              "line": 338,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueAsNumberChanged\"",
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "min",
          "type": "Object | null | undefined",
          "description": "The minimal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 351,
              "column": 8
            },
            "end": {
              "line": 355,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_minChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_minValue",
          "type": "number | null | undefined",
          "description": "value if the minimum date",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 360,
              "column": 8
            },
            "end": {
              "line": 362,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "max",
          "type": "Object | null | undefined",
          "description": "The maximal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 367,
              "column": 8
            },
            "end": {
              "line": 371,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_maxChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_maxValue",
          "type": "number | null | undefined",
          "description": "value if the maximum date",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 376,
              "column": 8
            },
            "end": {
              "line": 378,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12Format",
          "type": "boolean",
          "description": "when true, 12-hour time format, else 24-hour",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 384,
              "column": 8
            },
            "end": {
              "line": 388,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "timezone",
          "type": "string | null | undefined",
          "description": "The timezone offset in '±hh:mm' format",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 403,
              "column": 8
            },
            "end": {
              "line": 407,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_timezoneChanged\"",
              "attributeType": "String"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "offsetMinutes",
          "type": "number | null | undefined",
          "description": "The offset minutes of the set timezone",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 412,
              "column": 8
            },
            "end": {
              "line": 416,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_offsetMinutesChanged\"",
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeZoneHours",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 418,
              "column": 8
            },
            "end": {
              "line": 420,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeZoneMinutes",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 422,
              "column": 8
            },
            "end": {
              "line": 424,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_recentLocalTimezoneOffset",
          "type": "number | null | undefined",
          "description": "The offset minute of the current datetime",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 429,
              "column": 8
            },
            "end": {
              "line": 431,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_dateLocked",
          "type": "boolean | null | undefined",
          "description": "if true, time will be `00:00:00.000`",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 444,
              "column": 8
            },
            "end": {
              "line": 447,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "DatetimeMixin"
        }
      ],
      "methods": [
        {
          "name": "_orderDateParts",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "date-input.js",
            "start": {
              "line": 63,
              "column": 4
            },
            "end": {
              "line": 118,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "order"
            },
            {
              "name": "clamp"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DateInputPattern"
        },
        {
          "name": "_getDefaultForProp",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "date-input.js",
            "start": {
              "line": 120,
              "column": 4
            },
            "end": {
              "line": 130,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            }
          ],
          "inheritedFrom": "DateInputPattern"
        },
        {
          "name": "_computeMaxForDayInput",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "date-input.js",
            "start": {
              "line": 132,
              "column": 4
            },
            "end": {
              "line": 137,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year"
            },
            {
              "name": "month"
            }
          ],
          "inheritedFrom": "DateInputPattern"
        },
        {
          "name": "_switchAm",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "time-input.js",
            "start": {
              "line": 82,
              "column": 4
            },
            "end": {
              "line": 84,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "TimeInputPattern"
        },
        {
          "name": "_computePartOrder",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-input-mixin.js",
            "start": {
              "line": 361,
              "column": 4
            },
            "end": {
              "line": 363,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "first"
            }
          ],
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "_computeResetButtonIsInvisible",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "datetime-input-mixin.js",
            "start": {
              "line": 365,
              "column": 4
            },
            "end": {
              "line": 367,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "valueIsSet"
            },
            {
              "name": "defaultValue"
            },
            {
              "name": "valueAsNumber"
            }
          ],
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "_attachDom",
          "description": "attach dom with `delegatesFocus: true` so that the element is also focussed while its's children are too, and to autofocus to first tabable",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 21,
              "column": 4
            },
            "end": {
              "line": 30,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom"
            }
          ],
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 135,
              "column": 4
            },
            "end": {
              "line": 138,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_defaultIsSet",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 146,
              "column": 4
            },
            "end": {
              "line": 148,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "Object",
              "description": "value to test"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "true, if the value is set"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_defaultValidate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 158,
              "column": 4
            },
            "end": {
              "line": 160,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isSet",
              "type": "Function",
              "description": "The function that defines if the value is set"
            },
            {
              "name": "value",
              "type": "Object",
              "description": "value to validate"
            },
            {
              "name": "required",
              "type": "Boolean",
              "description": "if true, the value is required"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "true, if the value is valid"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_computeInvalid",
          "description": "defines whether the value is set",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 169,
              "column": 4
            },
            "end": {
              "line": 171,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "validate"
            },
            {
              "name": "isSet"
            },
            {
              "name": "value"
            },
            {
              "name": "required"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_computeValueIsSet",
          "description": "defines whether the value is set",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 178,
              "column": 4
            },
            "end": {
              "line": 180,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isSet"
            },
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_valueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 182,
              "column": 4
            },
            "end": {
              "line": 187,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_defaultChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 584,
              "column": 4
            },
            "end": {
              "line": 591,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_createReflectPropertyToValueObserver",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 199,
              "column": 4
            },
            "end": {
              "line": 209,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_reflectPropertyToValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 211,
              "column": 4
            },
            "end": {
              "line": 213,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_reflectValueToProperty",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 215,
              "column": 4
            },
            "end": {
              "line": 217,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "validate",
          "description": "validates the input for iron-form",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 222,
              "column": 4
            },
            "end": {
              "line": 224,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "reset",
          "description": "reset the value",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 229,
              "column": 4
            },
            "end": {
              "line": 235,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "_localeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/intl-datetime-format-mixin.js",
            "start": {
              "line": 95,
              "column": 4
            },
            "end": {
              "line": 283,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "_shouldPropertyChange",
          "description": "overwritten of polymer to handle -0",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 212,
              "column": 4
            },
            "end": {
              "line": 218,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property"
            },
            {
              "name": "value"
            },
            {
              "name": "old"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "now",
          "description": "Sets value to the actual date",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 464,
              "column": 4
            },
            "end": {
              "line": 480,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "setDate",
          "description": "sets date to all necessary properties",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 486,
              "column": 4
            },
            "end": {
              "line": 543,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "[the date to set]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "resetDate",
          "description": "resets the date (if `default` is set, it will be used for the new value)",
          "privacy": "public",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 549,
              "column": 4
            },
            "end": {
              "line": 582,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Event",
              "description": "[a causing event will not propagated]"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeDatetime",
          "description": "compute date by date properties",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 603,
              "column": 4
            },
            "end": {
              "line": 669,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year",
              "type": "number"
            },
            {
              "name": "month",
              "type": "number"
            },
            {
              "name": "day",
              "type": "number"
            },
            {
              "name": "hour",
              "type": "number"
            },
            {
              "name": "minute",
              "type": "number"
            },
            {
              "name": "second",
              "type": "number"
            },
            {
              "name": "millisecond",
              "type": "number"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_dateTimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 671,
              "column": 4
            },
            "end": {
              "line": 698,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "date"
            },
            {
              "name": "time"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_datetimeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 700,
              "column": 4
            },
            "end": {
              "line": 742,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "datetime"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_valueAsNumberChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 744,
              "column": 4
            },
            "end": {
              "line": 750,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_valueAsDateChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 752,
              "column": 4
            },
            "end": {
              "line": 763,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_checkThreshold",
          "description": "test date object against thresholds",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 770,
              "column": 4
            },
            "end": {
              "line": 781,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date"
            }
          ],
          "return": {
            "type": "Date",
            "desc": "ether the threshold when the date is exceeding or the date object itself"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_clampUTCComponents",
          "description": "clamp UTC values",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 789,
              "column": 4
            },
            "end": {
              "line": 806,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date",
              "description": "The Date to clamp"
            },
            {
              "name": "clamp",
              "type": "string",
              "description": "The date component to clamp"
            }
          ],
          "return": {
            "type": "Date",
            "desc": "The clamped date"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_ifClamped",
          "description": "clamp to date component",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 811,
              "column": 4
            },
            "end": {
              "line": 815,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "clamp"
            },
            {
              "name": "comp"
            },
            {
              "name": "hidden"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_ifNotClamped",
          "description": "clamp to date component",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 819,
              "column": 4
            },
            "end": {
              "line": 821,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "clamp"
            },
            {
              "name": "comp"
            },
            {
              "name": "hidden"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_checkDefaultTimezone",
          "description": "set the default timezone if needed",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 827,
              "column": 4
            },
            "end": {
              "line": 840,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_computeTimezoneShift",
          "description": "correct a timezone shift when date changes from winter to summertime (locally)",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 846,
              "column": 4
            },
            "end": {
              "line": 855,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d",
              "type": "Date"
            }
          ],
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_clampChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 857,
              "column": 4
            },
            "end": {
              "line": 865,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "clamp"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_minChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 867,
              "column": 4
            },
            "end": {
              "line": 884,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "min"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_maxChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 886,
              "column": 4
            },
            "end": {
              "line": 903,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "max"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_minMaxValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 905,
              "column": 4
            },
            "end": {
              "line": 909,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_hour12Changed",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 911,
              "column": 4
            },
            "end": {
              "line": 917,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hour12"
            },
            {
              "name": "old"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_isAmChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 919,
              "column": 4
            },
            "end": {
              "line": 923,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isAm"
            },
            {
              "name": "old"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timezoneChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 925,
              "column": 4
            },
            "end": {
              "line": 948,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "timezone"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_offsetMinutesChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 950,
              "column": 4
            },
            "end": {
              "line": 960,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "offsetMinutes"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "_timeZoneHoursMinutesChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 962,
              "column": 4
            },
            "end": {
              "line": 981,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hour"
            },
            {
              "name": "minute"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "DatetimeMixin"
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        },
        {
          "url": "demo/form.html",
          "description": "in a form"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 29,
          "column": 0
        },
        "end": {
          "line": 59,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "DatetimeInput",
      "attributes": [
        {
          "name": "clamp",
          "description": "Clamp timetime to a property\npossible values: 'month', 'day', 'hour', 'minute', 'second', 'millisecond' or ''",
          "sourceRange": {
            "start": {
              "line": 52,
              "column": 6
            },
            "end": {
              "line": 56,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "hide-reset-button",
          "description": "if true, the reset button is hidden",
          "sourceRange": {
            "file": "datetime-input-mixin.js",
            "start": {
              "line": 341,
              "column": 8
            },
            "end": {
              "line": 344,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "with-timezone",
          "description": "if true, timezone inputs are shown",
          "sourceRange": {
            "file": "datetime-input-mixin.js",
            "start": {
              "line": 349,
              "column": 8
            },
            "end": {
              "line": 352,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "DatetimeInputMixin"
        },
        {
          "name": "name",
          "description": "name of the input",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 37,
              "column": 8
            },
            "end": {
              "line": 39,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "title",
          "description": "description for the element and can be used as a hint for invalid values",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 44,
              "column": 8
            },
            "end": {
              "line": 47,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "property-for-value",
          "description": "defines the property that should be used for the value",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 52,
              "column": 8
            },
            "end": {
              "line": 55,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "value",
          "description": "value of the input",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 60,
              "column": 8
            },
            "end": {
              "line": 64,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "default",
          "description": "The default value of the input, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 343,
              "column": 8
            },
            "end": {
              "line": 346,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "disabled",
          "description": "disables the input",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 77,
              "column": 8
            },
            "end": {
              "line": 81,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "invalid",
          "description": "required attribute",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 86,
              "column": 8
            },
            "end": {
              "line": 91,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "required",
          "description": "required attribute",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 96,
              "column": 8
            },
            "end": {
              "line": 101,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "value-is-set",
          "description": "is true when the value is set",
          "sourceRange": {
            "file": "../@fooloomanzoo/input-picker-pattern/form-element-mixin.js",
            "start": {
              "line": 106,
              "column": 8
            },
            "end": {
              "line": 110,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "locale",
          "description": "The current locale",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/intl-datetime-format-mixin.js",
            "start": {
              "line": 23,
              "column": 8
            },
            "end": {
              "line": 26,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "decimal-separator",
          "description": "locale separator for local decimal values",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/intl-datetime-format-mixin.js",
            "start": {
              "line": 32,
              "column": 8
            },
            "end": {
              "line": 35,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "date-separator",
          "description": "Separator for local date values (date-string is still in ISO-Format)",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/intl-datetime-format-mixin.js",
            "start": {
              "line": 41,
              "column": 8
            },
            "end": {
              "line": 44,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "time-separator",
          "description": "Separator for local time values (time-string is still in ISO-Format)",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/intl-datetime-format-mixin.js",
            "start": {
              "line": 50,
              "column": 8
            },
            "end": {
              "line": 53,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "am-string",
          "description": "locale representation of 'AM'",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/intl-datetime-format-mixin.js",
            "start": {
              "line": 58,
              "column": 8
            },
            "end": {
              "line": 61,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "pm-string",
          "description": "locale representation of 'PM'",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/intl-datetime-format-mixin.js",
            "start": {
              "line": 66,
              "column": 8
            },
            "end": {
              "line": 69,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "date-order",
          "description": "order of date-parts",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/intl-datetime-format-mixin.js",
            "start": {
              "line": 74,
              "column": 8
            },
            "end": {
              "line": 85,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "IntlDatetimeFormatMixin"
        },
        {
          "name": "year",
          "description": "The year of the selected date",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 225,
              "column": 8
            },
            "end": {
              "line": 228,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "month",
          "description": "The month of the selected date (starts with 1)",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 233,
              "column": 8
            },
            "end": {
              "line": 236,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "day",
          "description": "The day of the selected date",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 241,
              "column": 8
            },
            "end": {
              "line": 244,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour",
          "description": "The hour of the selected time",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 249,
              "column": 8
            },
            "end": {
              "line": 252,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12",
          "description": "hour in 12-hour-format",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 258,
              "column": 8
            },
            "end": {
              "line": 262,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "is-am",
          "description": "true, when A.M. (when `hour` < 12)",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 268,
              "column": 8
            },
            "end": {
              "line": 272,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "minute",
          "description": "The minute of the selected time",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 277,
              "column": 8
            },
            "end": {
              "line": 280,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "second",
          "description": "The second of the selected time",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 285,
              "column": 8
            },
            "end": {
              "line": 288,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "millisecond",
          "description": "The millisecond of the selected time",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 293,
              "column": 8
            },
            "end": {
              "line": 296,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "datetime",
          "description": "the selected date and time (format: iso8601)",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 301,
              "column": 8
            },
            "end": {
              "line": 304,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "date",
          "description": "the selected date (format: iso8601)",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 309,
              "column": 8
            },
            "end": {
              "line": 312,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "time",
          "description": "the selected time (format: iso8601)",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 317,
              "column": 8
            },
            "end": {
              "line": 320,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value-as-date",
          "description": "The date-object of the selected date",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 325,
              "column": 8
            },
            "end": {
              "line": 329,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Date | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "value-as-number",
          "description": "The value of the selected date",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 334,
              "column": 8
            },
            "end": {
              "line": 338,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "min",
          "description": "The minimal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 351,
              "column": 8
            },
            "end": {
              "line": 355,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "max",
          "description": "The maximal date, could be a number, a date-object or an iso-string in time, date or datetime-notation",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 367,
              "column": 8
            },
            "end": {
              "line": 371,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "hour12-format",
          "description": "when true, 12-hour time format, else 24-hour",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 384,
              "column": 8
            },
            "end": {
              "line": 388,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "timezone",
          "description": "The timezone offset in '±hh:mm' format",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 403,
              "column": 8
            },
            "end": {
              "line": 407,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        },
        {
          "name": "offset-minutes",
          "description": "The offset minutes of the set timezone",
          "sourceRange": {
            "file": "../@fooloomanzoo/property-mixins/datetime-mixin.js",
            "start": {
              "line": 412,
              "column": 8
            },
            "end": {
              "line": 416,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "DatetimeMixin"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "clamp-changed",
          "description": "Fired when the `clamp` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "datetime-input",
      "mixins": [
        "DateInputPattern",
        "TimeInputPattern",
        "DatetimeInputMixin",
        "FormElementMixin",
        "DatetimeMixin"
      ]
    }
  ],
  "mixins": [
    {
      "description": "Mixin to extend an element for combining form-element-mixin and datetime-mixin",
      "summary": "",
      "path": "datetime-input-mixin.js",
      "properties": [
        {
          "name": "step",
          "type": "number | null | undefined",
          "description": "If set the step defines the step a date should be incremented (in seconds). The input for the most inferior standing that would create an integer step is used to increment the value.\nFor example, if the **step** is:\n + **0.05**: the millisecond-input will increment the value by 50 (50 milliseconds), the other inputs behaive as expected\n + **1.05**: the millisecond-input will increment the value by 1050 (1 second and 50 millisecond), the other inputs behaive as expected\n + **2**: the millisecond-input will be disabled, the second-input will increment the value by 2000 (2 seconds), the other inputs behaive as expected\n + **180**: the millisecond-input and the second-input will be disabled, the minute-input will increment the value by 180000 (3 minutes), the other inputs behaive as expected\nIf `step=\"0\"` all inputs will be disabled, else if the step is below _0.001_ the step will be set to **0.001**. The most supirior input that will become the given step is the day-input.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 34,
              "column": 8
            },
            "end": {
              "line": 37,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "_partsDisabled",
          "type": "Object | null | undefined",
          "description": "date-parts that are disabled",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 42,
              "column": 8
            },
            "end": {
              "line": 48,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{}"
        },
        {
          "name": "_partsStep",
          "type": "Object | null | undefined",
          "description": "the computed steps for the date-parts",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 53,
              "column": 8
            },
            "end": {
              "line": 66,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{\"day\":1,\"hour\":1,\"minute\":1,\"second\":1,\"millisecond\":1}"
        },
        {
          "name": "propertyForValue",
          "type": "string | null | undefined",
          "description": "defines the property that should be used for the value",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 70,
              "column": 8
            },
            "end": {
              "line": 73,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"valueAsNumber\""
        },
        {
          "name": "_defaultValue",
          "type": "number | null | undefined",
          "description": "value of the default property",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 78,
              "column": 8
            },
            "end": {
              "line": 81,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Number"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_computeDefaultValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 4
            },
            "end": {
              "line": 95,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ]
        },
        {
          "name": "_defaultChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 97,
              "column": 4
            },
            "end": {
              "line": 101,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_defaultValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 103,
              "column": 4
            },
            "end": {
              "line": 110,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "def"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "now",
          "description": "Sets value to the actual date",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 115,
              "column": 4
            },
            "end": {
              "line": 151,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computePartsStep",
          "description": "compute the steps for the related inputs. The day-input is the highest modified input allthough if the step is higher than a day in seconds it might also change month- or year-inputs.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 156,
              "column": 4
            },
            "end": {
              "line": 239,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "step"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computePartsDisabled",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 241,
              "column": 4
            },
            "end": {
              "line": 258,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "change"
            },
            {
              "name": "disabled"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "reset",
          "description": "reset the value and date properties",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 263,
              "column": 4
            },
            "end": {
              "line": 265,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 12,
          "column": 7
        },
        "end": {
          "line": 267,
          "column": 3
        }
      },
      "privacy": "public",
      "name": "DatetimeFormMixin",
      "attributes": [
        {
          "name": "step",
          "description": "If set the step defines the step a date should be incremented (in seconds). The input for the most inferior standing that would create an integer step is used to increment the value.\nFor example, if the **step** is:\n + **0.05**: the millisecond-input will increment the value by 50 (50 milliseconds), the other inputs behaive as expected\n + **1.05**: the millisecond-input will increment the value by 1050 (1 second and 50 millisecond), the other inputs behaive as expected\n + **2**: the millisecond-input will be disabled, the second-input will increment the value by 2000 (2 seconds), the other inputs behaive as expected\n + **180**: the millisecond-input and the second-input will be disabled, the minute-input will increment the value by 180000 (3 minutes), the other inputs behaive as expected\nIf `step=\"0\"` all inputs will be disabled, else if the step is below _0.001_ the step will be set to **0.001**. The most supirior input that will become the given step is the day-input.",
          "sourceRange": {
            "start": {
              "line": 34,
              "column": 8
            },
            "end": {
              "line": 37,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "property-for-value",
          "description": "defines the property that should be used for the value",
          "sourceRange": {
            "start": {
              "line": 70,
              "column": 8
            },
            "end": {
              "line": 73,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": []
    },
    {
      "description": "Mixin to extend an element for an datetime input element",
      "summary": "",
      "path": "datetime-input-mixin.js",
      "properties": [
        {
          "name": "hideResetButton",
          "type": "boolean | null | undefined",
          "description": "if true, the reset button is hidden",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 341,
              "column": 8
            },
            "end": {
              "line": 344,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "withTimezone",
          "type": "boolean | null | undefined",
          "description": "if true, timezone inputs are shown",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 349,
              "column": 8
            },
            "end": {
              "line": 352,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "_resetButtonIsInvisible",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 354,
              "column": 8
            },
            "end": {
              "line": 357,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_computePartOrder",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 361,
              "column": 4
            },
            "end": {
              "line": 363,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "first"
            }
          ]
        },
        {
          "name": "_computeResetButtonIsInvisible",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 365,
              "column": 4
            },
            "end": {
              "line": 367,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "valueIsSet"
            },
            {
              "name": "defaultValue"
            },
            {
              "name": "valueAsNumber"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 278,
          "column": 0
        },
        "end": {
          "line": 369,
          "column": 3
        }
      },
      "privacy": "public",
      "name": "DatetimeInputMixin",
      "attributes": [
        {
          "name": "hide-reset-button",
          "description": "if true, the reset button is hidden",
          "sourceRange": {
            "start": {
              "line": 341,
              "column": 8
            },
            "end": {
              "line": 344,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "with-timezone",
          "description": "if true, timezone inputs are shown",
          "sourceRange": {
            "start": {
              "line": 349,
              "column": 8
            },
            "end": {
              "line": 352,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": []
    },
    {
      "description": "Mixin to extend an element to a date input",
      "summary": "",
      "path": "date-input.js",
      "properties": [
        {
          "name": "clamp",
          "type": "string | null | undefined",
          "description": "Clamp timetime to a property\npossible values: 'month', 'day', 'hour', 'minute', 'second', 'millisecond' or ''",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 41,
              "column": 8
            },
            "end": {
              "line": 45,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "defaultValue": "\"hour\""
        },
        {
          "name": "_timeOnly",
          "type": "boolean | null | undefined",
          "description": "if true perspective starts at 0 (1970-01-01)",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 50,
              "column": 8
            },
            "end": {
              "line": 53,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "_orderDateParts",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 63,
              "column": 4
            },
            "end": {
              "line": 118,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "order"
            },
            {
              "name": "clamp"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_getDefaultForProp",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 120,
              "column": 4
            },
            "end": {
              "line": 130,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            }
          ]
        },
        {
          "name": "_computeMaxForDayInput",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 132,
              "column": 4
            },
            "end": {
              "line": 137,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "year"
            },
            {
              "name": "month"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        },
        {
          "url": "demo/form.html",
          "description": "Form"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 18,
          "column": 0
        },
        "end": {
          "line": 139,
          "column": 3
        }
      },
      "privacy": "public",
      "name": "DateInputPattern",
      "attributes": [
        {
          "name": "clamp",
          "description": "Clamp timetime to a property\npossible values: 'month', 'day', 'hour', 'minute', 'second', 'millisecond' or ''",
          "sourceRange": {
            "start": {
              "line": 41,
              "column": 8
            },
            "end": {
              "line": 45,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": []
    },
    {
      "description": "Mixin to extend an element to a time input",
      "summary": "",
      "path": "time-input.js",
      "properties": [
        {
          "name": "clamp",
          "type": "string | null | undefined",
          "description": "Clamp timetime to a property\npossible values: 'month', 'day', 'hour', 'minute', 'second', 'millisecond' or ''",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 66,
              "column": 8
            },
            "end": {
              "line": 70,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        },
        {
          "name": "_timeOnly",
          "type": "boolean | null | undefined",
          "description": "if true perspective starts at 0 (1970-01-01)",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 75,
              "column": 8
            },
            "end": {
              "line": 78,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "true"
        }
      ],
      "methods": [
        {
          "name": "_switchAm",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 82,
              "column": 4
            },
            "end": {
              "line": 84,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        },
        {
          "url": "demo/form.html",
          "description": "Form"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 19,
          "column": 0
        },
        "end": {
          "line": 86,
          "column": 3
        }
      },
      "privacy": "public",
      "name": "TimeInputPattern",
      "attributes": [
        {
          "name": "clamp",
          "description": "Clamp timetime to a property\npossible values: 'month', 'day', 'hour', 'minute', 'second', 'millisecond' or ''",
          "sourceRange": {
            "start": {
              "line": 66,
              "column": 8
            },
            "end": {
              "line": 70,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": []
    }
  ]
}
